@using MetaFrm.Control
@using MetaFrm.Maui.Devices
@using MetaFrm.Razor.Essentials
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@inherits BaseComponent

<div class="container">
    <div class="form-outline">
        <h1>Register</h1>
        <p>@Factory.ProjectService.ServiceName</p>
    </div>
    <div class="row d-flex align-items-center justify-content-center h-100">
        <div class="col-md-8 col-lg-7 col-xl-6 mb-4">
            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg" class="img-fluid" alt="Phone image">
        </div>
        <div class="col-md-7 col-lg-5 col-xl-5 offset-xl-1">
            <EditForm Model="@this.RegisterViewModel" OnValidSubmit="this.HandleValidSubmitAsync" OnInvalidSubmit="this.HandleInvalidSubmit">
                <DataAnnotationsValidator />

                @if (!this.RegisterViewModel.AccessCodeVisible)
                {
                    <div class="row">
                        <FieldControl Label="Email address">
                            <Control>
                                <InputText id="email" class="form-control col-md-6" placeholder="Email address"
                                       @bind-Value="this.RegisterViewModel.Email" @onkeydown="@EmailKeydown"
                                       disabled="@this.RegisterViewModel.AccessCodeVisible" readonly="@this.RegisterViewModel.AccessCodeVisible" />
                                <ValidationMessage For="@(()=>this.RegisterViewModel.Email)" />
                            </Control>
                        </FieldControl>
                        <FieldControl Label="Nickname">
                            <Control>
                                <InputText id="nickname" class="form-control" placeholder="* Nickname" @bind-Value="this.RegisterViewModel.Nickname" @onkeydown="@NicknameKeydown" disabled="@this.RegisterViewModel.AccessCodeVisible" />
                                <ValidationMessage For="@(()=>this.RegisterViewModel.Nickname)" />
                            </Control>
                        </FieldControl>
                    </div>
                    <div class="row">
                        <FieldControl Label="Full name">
                            <Control>
                                <InputText id="fullname" class="form-control" placeholder="* Full name" @bind-Value="this.RegisterViewModel.Fullname" @onkeydown="@FullnameKeydown" disabled="@this.RegisterViewModel.AccessCodeVisible" />
                                <ValidationMessage For="@(()=>this.RegisterViewModel.Fullname)" />
                            </Control>
                        </FieldControl>
                        <FieldControl Label="Phone Number">
                            <Control>
                                <InputText id="phonenumber" class="form-control" placeholder="Phone Number" @bind-Value="this.RegisterViewModel.PhoneNumber" @onkeydown="@PhonenumberKeydown" disabled="@this.RegisterViewModel.AccessCodeVisible" />
                                <ValidationMessage For="@(()=>this.RegisterViewModel.PhoneNumber)" />
                            </Control>
                        </FieldControl>
                    </div>
                    <div class="row pb-2">
                        <FieldControl Label="Password">
                            <Control>
                                <InputText id="password" type="password" class="form-control" placeholder="* Password" @bind-Value="this.RegisterViewModel.Password" @onkeydown="@PasswordKeydown" disabled="@this.RegisterViewModel.AccessCodeVisible" />
                                <ValidationMessage For="@(()=>this.RegisterViewModel.Password)" />
                            </Control>
                        </FieldControl>
                        <FieldControl Label="Repeat Password">
                            <Control>
                                <InputText id="repeatpassword" type="password" class="form-control" placeholder="* Repeat Password" @bind-Value="this.RegisterViewModel.RepeatPassword" @onkeydown="@RepeatPasswordKeydown" disabled="@this.RegisterViewModel.AccessCodeVisible" />
                                <ValidationMessage For="@(()=>this.RegisterViewModel.RepeatPassword)" />
                            </Control>
                        </FieldControl>
                    </div>

                    <div class="row pb-0">
                        <FieldControl Label="" CssClassAppend="py-2 col-md-12" IsColon="false">
                            <Control>
                                <InputCheckbox id="agreelabel" class="form-check-input small" type="checkbox" @bind-Value="this.RegisterViewModel.Agree" disabled="@this.RegisterViewModel.AccessCodeVisible" />
                                <span class="form-check-label small" for="agreelabel">
                                    I have read and agree to MetaFreamwork’s
                                    @if (Factory.Platform == DevicePlatform.Web || Factory.Platform == DevicePlatform.WinForms || Factory.Platform == DevicePlatform.WPF)
                                    {
                                        @if (this.TermsOfServiceUrl.IsNullOrEmpty())
                                        {
                                            <a href="#">Terms of Service </a>
                                        }
                                        else
                                        {
                                            <a href="@this.TermsOfServiceUrl" target="_blank">Terms of Service </a>
                                        }
                                    }
                                    else
                                    {
                                        @if (this.TermsOfServiceUrl.IsNullOrEmpty())
                                        {
                                            <a href="#">Terms of Service </a>
                                        }
                                        else
                                        {
                                            <a @onclick="() => this.OnLinkClick(this.TermsOfServiceUrl)" href="">Terms of Service </a>
                                        }
                                    }
                                    and
                                    @if (Factory.Platform == DevicePlatform.Web || Factory.Platform == DevicePlatform.WinForms || Factory.Platform == DevicePlatform.WPF)
                                    {
                                        @if (this.TermsOfServiceUrl.IsNullOrEmpty())
                                        {
                                            <a href="#"> Privacy Policy.</a>
                                        }
                                        else
                                        {
                                            <a href="@this.PrivacyPolicyUrl" target="_blank"> Privacy Policy.</a>
                                        }
                                    }
                                    else
                                    {
                                        @if (this.TermsOfServiceUrl.IsNullOrEmpty())
                                        {
                                            <a href="#"> Privacy Policy.</a>
                                        }
                                        else
                                        {
                                            <a @onclick="() => this.OnLinkClick(this.PrivacyPolicyUrl)" href=""> Privacy Policy.</a>
                                        }
                                    }
                                </span>
                            </Control>
                        </FieldControl>
                    </div>
                    <div class="row pb-2">
                        <FieldControl Label="" IsColon="false" Value="@("")"></FieldControl>
                        <FieldControl Label="" IsColon="false">
                            <Control>
                                <button type="submit" class="btn btn-primary btn-block w-100" disabled="@(this.RegisterViewModel.AccessCodeVisible || !this.RegisterViewModel.Agree)"><span class="oi oi-pencil" /> Register</button>
                            </Control>
                        </FieldControl>
                    </div>
                }
                else
                {
                    <div class="row pb-0">
                        <FieldControl Label="Remaining time" CssClassLabel="text-center" IsColon="false">
                            <Control>
                                <div class="text-center">@($"{this.RemainTime.ToString("hh\\:mm\\:ss")}")</div>
                            </Control>
                        </FieldControl>
                        <FieldControl Label="Email Verification Code" IsColon="false">
                            <Control>
                                <input id="inputaccesscode" type="text" class="form-control @(this.RegisterViewModel.AccessCodeConfirmVisible && !this.RegisterViewModel.IsBusy?"is-valid":"is-invalid")" placeholder="Access Code"
                                   @bind-value="this.RegisterViewModel.InputAccessCode" @bind-value:event="oninput" @onkeydown="@InputAccessCodeKeydown" disabled="@(!this.RegisterViewModel.AccessCodeVisible && !this.RegisterViewModel.IsBusy)" />
                            </Control>
                        </FieldControl>
                    </div>
                    <div class="row">
                        <FieldControl Label="" IsColon="false" Value="@("")"></FieldControl>
                        <FieldControl Label="" IsColon="false">
                            <Control>
                                <button type="button" class="btn btn-primary btn-block w-100" @onclick="OnRegisterClick" disabled="@(!this.RegisterViewModel.AccessCodeConfirmVisible && !this.RegisterViewModel.IsBusy)">Confirm</button>
                            </Control>
                        </FieldControl>
                    </div>
                }
            </EditForm>
        </div>
    </div>
</div>